{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leone\\\\ReporteOlas\\\\client\\\\src\\\\auth\\\\AuthProvider.js\",\n  _s = $RefreshSig$();\nimport { useState, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport default function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const login = userCredentials => {\n    setUser({\n      id: 1,\n      name: \"Ale\",\n      email: 'ale@gmail.com',\n      role: \"admin\"\n    }); // Asegurar que el usuario tenga un rol\n  };\n  const logout = () => setUser(null);\n  const isLogged = () => !!user;\n  const hasRole = role => (user === null || user === void 0 ? void 0 : user.role) === role; // Compara el rol correctamente\n\n  const updateUser = data => {\n    setUser({\n      ...user,\n      ...data\n    });\n  };\n  const contextValue = {\n    user,\n    updateUser,\n    isLogged,\n    login,\n    logout,\n    hasRole\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","createContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","login","userCredentials","id","name","email","role","logout","isLogged","hasRole","updateUser","data","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Leone/ReporteOlas/client/src/auth/AuthProvider.js"],"sourcesContent":["import { useState, createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport default function AuthProvider({ children }) {\r\n    const [user, setUser] = useState(null);\r\n\r\n    const login = (userCredentials) => {\r\n        setUser({ id: 1, name: \"Ale\", email: 'ale@gmail.com', role: \"admin\" }); // Asegurar que el usuario tenga un rol\r\n    };\r\n\r\n    const logout = () => setUser(null);\r\n    const isLogged = () => !!user;\r\n    const hasRole = (role) => user?.role === role; // Compara el rol correctamente\r\n\r\n    const updateUser = (data) =>{\r\n        setUser({\r\n            ...user,\r\n            ...data\r\n        })\r\n    }\r\n    const contextValue = {\r\n        user,\r\n        updateUser,\r\n        isLogged,\r\n        login,\r\n        logout,\r\n        hasRole,\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextValue}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,aAAa,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,WAAW,gBAAGH,aAAa,CAAC,CAAC;AAE1C,eAAe,SAASI,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMU,KAAK,GAAIC,eAAe,IAAK;IAC/BF,OAAO,CAAC;MAAEG,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,KAAK;MAAEC,KAAK,EAAE,eAAe;MAAEC,IAAI,EAAE;IAAQ,CAAC,CAAC,CAAC,CAAC;EAC5E,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAMP,OAAO,CAAC,IAAI,CAAC;EAClC,MAAMQ,QAAQ,GAAGA,CAAA,KAAM,CAAC,CAACT,IAAI;EAC7B,MAAMU,OAAO,GAAIH,IAAI,IAAK,CAAAP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,IAAI,MAAKA,IAAI,CAAC,CAAC;;EAE/C,MAAMI,UAAU,GAAIC,IAAI,IAAI;IACxBX,OAAO,CAAC;MACJ,GAAGD,IAAI;MACP,GAAGY;IACP,CAAC,CAAC;EACN,CAAC;EACD,MAAMC,YAAY,GAAG;IACjBb,IAAI;IACJW,UAAU;IACVF,QAAQ;IACRP,KAAK;IACLM,MAAM;IACNE;EACJ,CAAC;EAED,oBACIf,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAf,QAAA,EACrCA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B;AAACpB,EAAA,CA/BuBF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}